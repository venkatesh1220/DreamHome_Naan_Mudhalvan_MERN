@import "../node_modules/bootstrap/dist/css/bootstrap.min.css";

* {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
   font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;

}

html,
body {
   width: 100%;
   height: 100%;
}

a {
   color: black;
   text-decoration: none;
   margin-right: 20px;
}

.App {
   display: flex;
   flex-direction: column;
   min-height: 100vh;
}

.content {
   flex: 1;
}

.home-body {
   height: 81.5vh;
   overflow: hidden;
}

.home-body .carousel {
   max-height: 100%;
}

.home-body .carousel .carousel-item {
   height: 100%;
}

.home-body .carousel .carousel-item img {
   width: 100%;
   height: 100%;
   object-fit: contain;
   background-size: cover;
}

.property-content {
   display: flex;
   flex-wrap: wrap;
   justify-content: center;
}

.content-home {
   position: absolute;
   top: 30%;
   left: 5%;
}

.content-home p {
   font-size: 42px;
   font-weight: 800;
   color: rgb(102, 62, 9);
}

.filter-container {
   width: 100%;
   height: 10vh;
   display: flex;
   align-items: center;
   justify-content: center;
   margin-bottom: 10px;
}

.filter-container input,
select {
   border: 1px solid black;
   padding: 10px;
   margin: 10px;
   border-radius: 5px;
}

.column {
   width: 100%;
   display: flex;
   flex-wrap: wrap;
}

.card {
   margin-right: 20px;
   margin-bottom: 15px;
}

.card .card-body .card-title img {
   width: 100%;
   height: 150px;
}

.chat-container {
   display: flex;
   flex-direction: column;
   height: 100%;
}

.chat-container h1 {
   font-size: 22px;
   text-align: center;
   margin-bottom: 20px;
}


.message-window {
   /* flex: 1; */
   overflow-x: auto;
   padding: 10px;
   width: 100%;
   max-height: 200px;
   height: 100px;
   border: 1px solid lightgray;
   border-radius: 5px;
}

.message {
   background-color: #f5f5f5;
   padding: 5px;
   margin-bottom: 10px;
}

.input-container {
   display: flex;
   align-items: center;
   padding: 12px;
}

.input-container textarea {
   width: 25px;
   flex: 1;
   padding: 5px;
   margin-right: 5px;
   border: none;
   border-radius: 5px;
   background-color: rgb(250, 247, 247);
}

.input-container button {
   padding: 5px 10px;
   color: white;
   font-size: 12px;
   border: none;
   width: 40px;
   height: 40px;
   border-radius: 50%;
}

@media screen and (max-width: 480px) {
   .chat-container {
      height: auto;
   }
}





.hover-effect-button {
   border: 2px solid #0b0b2b;
   /* Border color same as navbar */
   background-color: transparent;
   /* Transparent background */
   color: #0b0b2b;
   /* Navbar color for the text */
   transition: all 0.3s ease;
   padding: 1rem;
   font-size: 1.2rem;
   /* Smooth transition */
}

.hover-effect-button:hover {
   background-color: #0b0b2b;
   /* Navbar background color */
   color: white;
   /* White text */
   border-color: #0b0b2b;
   /* Ensure border matches */
}





.filter-container {
   background-color: #0b0b2b;
   /* Navbar color */
   color: white;
   border-radius: 10px;
   padding: 20px;
   display: inline-block;
   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
   /* Smooth shadow */
   text-align: center;
   width: 90%;
   /* Make it responsive */
   max-width: 600px;
   /* Limit width */
   margin: auto;
   /* Center horizontally */
}

.filter-title {
   font-size: 22px;
   font-weight: 600;
   margin-bottom: 20px;
   color: white;
}

.filter-input,
.filter-select {
   display: block;
   width: 100%;
   /* Full width for responsiveness */
   margin: 10px 0;
   padding: 10px;
   font-size: 16px;
   border: 1px solid white;
   /* White border */
   border-radius: 5px;
   background-color: transparent;
   /* Transparent background */
   color: white;
   transition: all 0.3s ease;
}

.filter-input::placeholder {
   color: rgba(255, 255, 255, 0.6);
   /* Faded white placeholder */
}

.filter-input:focus,
.filter-select:focus {
   outline: none;
   border-color: black;
   /* Black border on focus */
   background-color: white;
   /* White background */
   color: #0b0b2b;
   /* Navbar color text */
}

.filter-select {
   cursor: pointer;
   /* Pointer cursor for dropdown */
}

@media screen and (max-width: 600px) {
   .filter-container {
      width: 95%;
      /* Smaller width for mobile */
      padding: 15px;
   }
}




.filter-container {
   background-color: #0b0b2b;
   /* Navbar color */
   color: white;
   border-radius: 10px;
   padding: 20px;
   display: inline-block;
   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
   /* Smooth shadow */
   text-align: center;
   width: 90%;
   /* Responsive width */
   max-width: 800px;
   /* Limit width */
   margin: auto;
   /* Center horizontally */
}

.filter-title {
   font-size: 22px;
   font-weight: 600;
   margin-bottom: 15px;
   color: white;
}

.filter-row {
   display: flex;
   gap: 15px;
   /* Space between filters */
   justify-content: center;
   /* Center the filters horizontally */
   flex-wrap: wrap;
   /* Allow wrapping on smaller screens */
}

.filter-input,
.filter-select {
   width: auto;
   /* Adjust width to content */
   padding: 10px;
   font-size: 16px;
   border: 1px solid white;
   /* White border */
   border-radius: 5px;
   background-color: transparent;
   /* Transparent background */
   color: white;
   transition: all 0.3s ease;
}

.filter-input::placeholder {
   color: rgba(255, 255, 255, 0.6);
   /* Faded white placeholder */
}

.filter-input:focus,
.filter-select:focus {
   outline: none;
   border-color: black;
   /* Black border on focus */
   background-color: white;
   /* White background */
   color: #0b0b2b;
   /* Navbar color text */
}

.filter-select {
   cursor: pointer;
   /* Pointer cursor for dropdown */
}

@media screen and (max-width: 768px) {
   .filter-row {
      flex-direction: column;
      /* Stack vertically on smaller screens */
      gap: 10px;
      /* Adjust spacing */
   }

   .filter-input,
   .filter-select {
      width: 100%;
      /* Full width for smaller screens */
   }
}


.filter-container {
   background-color: #0b0b2b;
   /* Navbar color */
   color: white;
   border-radius: 10px;
   padding: 20px;
   display: inline-block;
   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
   /* Smooth shadow */
   text-align: center;
   width: 90%;
   /* Responsive width */
   max-width: 800px;
   /* Limit width */
   margin: auto;
   /* Center horizontally */
}

.filter-title {
   font-size: 22px;
   font-weight: 600;
   margin-bottom: 15px;
   color: white;
}

.filter-row {
   display: flex;
   gap: 20px;
   /* Increased gap for better spacing */
   justify-content: center;
   /* Center the filters horizontally */
   flex-wrap: nowrap;
   /* Keep filters on one line */
   align-items: center;
   /* Align vertically */
}

.filter-input,
.filter-select {
   flex: 1;
   /* Equal width for all filters */
   max-width: 250px;
   /* Prevent filters from being too wide */
   padding: 10px;
   font-size: 16px;
   border: 1px solid white;
   /* White border */
   border-radius: 5px;
   background-color: transparent;
   /* Transparent background */
   color: white;
   transition: all 0.3s ease;
}

.filter-input::placeholder {
   color: rgba(255, 255, 255, 0.6);
   /* Faded white placeholder */
}

.filter-input:focus,
.filter-select:focus {
   outline: none;
   border-color: black;
   /* Black border on focus */
   background-color: white;
   /* White background */
   color: #0b0b2b;
   /* Navbar color text */
}

.filter-select {
   cursor: pointer;
   /* Pointer cursor for dropdown */
}

@media screen and (max-width: 768px) {
   .filter-row {
      flex-direction: column;
      /* Stack vertically on smaller screens */
      gap: 10px;
      /* Adjust spacing */
   }

   .filter-input,
   .filter-select {
      width: 100%;
      /* Full width for smaller screens */
   }
}



.filter-container {
   background-color: #0b0b2b;
   /* Navbar color */
   color: white;
   border-radius: 10px;
   padding: 20px;
   display: inline-block;
   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
   /* Smooth shadow */
   text-align: center;
   width: 100%;
   /* Responsive width */
   max-width: 800px;
   /* Limit width */
   margin: auto;
   /* Center horizontally */
}

.filter-title {
   font-size: 22px;
   font-weight: 600;
   margin-bottom: 15px;
   color: white;
}

.filter-row {
   display: flex;
   gap: 15px;
   /* Space between filters */
   justify-content: center;
   /* Center the filters horizontally */
   align-items: center;
   /* Vertical alignment */
   flex-wrap: nowrap;
   /* Single line layout */
}

.filter-input,
.filter-select {
   flex: 1;
   /* Uniform sizing */
   max-width: 200px;
   /* Consistent width */
   padding: 10px;
   font-size: 16px;
   border: 1px solid white;
   /* White border */
   border-radius: 5px;
   background-color: transparent;
   /* Transparent background */
   color: white;
   transition: all 0.3s ease;
   text-align: center;
   /* Centered text */
}

.filter-input::placeholder {
   color: rgba(255, 255, 255, 0.6);
   /* Faded white placeholder */
}

.filter-input:focus,
.filter-select:focus {
   outline: none;
   border-color: black;
   /* Black border on focus */
   background-color: white;
   /* White background */
   color: #0b0b2b;
   /* Navbar color text */
}

.filter-select {
   cursor: pointer;
   /* Pointer cursor for dropdown */
}

@media screen and (max-width: 768px) {
   .filter-row {
      flex-direction: column;
      /* Stack vertically on smaller screens */
      gap: 10px;
      /* Adjust spacing */
   }

   .filter-input,
   .filter-select {
      width: 100%;
      /* Full width for smaller screens */
   }
}




.filter-container {
   background-color: #0b0b2b;
   /* Navbar color */
   color: white;
   border-radius: 10px;
   padding: 20px;
   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
   /* Smooth shadow */
   text-align: center;
   max-width: 100%;
   height: 10rem;
   margin: auto;
}

.filter-title {
   font-size: 22px;
   font-weight: 600;
   margin-bottom: 15px;
   color: white;
}

.filter-row {
   display: flex;
   justify-content: space-around;
   /* Ensure spacing between filters */
   align-items: center;
   border-radius: 10px;
   /* Vertical alignment */
   gap: 10px;
   /* Space between elements */
   /* width: 104%;
   margin-left: -1.3rem; */
}

.filter-input,
.filter-select {
   flex: 1;
   /* Ensure uniform width */
   padding: 10px;
   font-size: 16px;
   border: 1px solid white;
   /* White border */
   border-radius: 5px;
   background-color: transparent;
   /* Transparent background */
   color: white;
   text-align: left;
   /* Align text left inside inputs/selects */
   max-width: 250px;
   /* Prevents elements from stretching too wide */
}

.filter-input::placeholder {
   color: rgba(255, 255, 255, 0.6);
   /* Placeholder in faded white */
}

.filter-input:focus,
.filter-select:focus {
   outline: none;
   border-color: black;
   background-color: white;
   color: #0b0b2b;
}

@media screen and (max-width: 768px) {
   .filter-row {
      flex-direction: column;
      /* Stack elements vertically on smaller screens */
      gap: 15px;
      /* Add more spacing for readability */
   }

   .filter-input,
   .filter-select {
      width: 100%;
      /* Full width for smaller screens */
   }
}









/* Custom Carousel Arrow Styles */
.carousel-control-prev,
.carousel-control-next {
   width: 50px;
   /* Adjust the size of the arrows */
   height: 50px;
   top: 50%;
   transform: translateY(-50%);
   background-color: rgba(255, 255, 255, 0.7);
   /* Light background to make the arrow visible */
   border-radius: 50%;
   /* Round the button edges */
   display: flex;
   justify-content: center;
   align-items: center;
   box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
   /* Optional: subtle shadow */
}


.carousel-control-prev {
   left: 10px;
}

.carousel-control-next {
   right: 10px;
}

.carousel-control-prev:hover,
.carousel-control-next:hover {
   background-color: #0b0b2b;
   /* Darken background on hover */
}

.carousel-control-prev:hover::before,
.carousel-control-next:hover::before {
   border-top-color: #fff;
   /* Change arrow color to white on hover */
}

/* Optional: Add transition effect for smoother changes */
.carousel-control-prev,
.carousel-control-next {
   transition: background-color 0.3s ease-in-out;
}


/* {allProperties.some((app) => (app.jobInfo._id === property._id) && (app.status === 'applied' || app.status === 'rejected' || app.status === 'selected')) ? (
                              <p style={{ float: 'right', color: 'grey' }} variant="warning" disabled>
                                 Already Applied
                              </p>
                           ) : userLoggedIn ? (
                              <Button
                                 style={{ float: 'right' }}
                                 variant="outline-warning"
                                 onClick={() => setSelectedJobId(property._id)}
                              >
                                 Apply Now
                              </Button>
                           ) : (
                              <Button style={{ float: 'right' }} variant="outline-warning">
                                 <Link to={'/login'}>Buy Now</Link>
                              </Button>
                           )} */
/* <Modal
                              centered
                              open={selectedJobId === property._id}
                              onOk={() => setSelectedJobId(null)}
                              onCancel={() => setSelectedJobId(null)}
                              width={1000}
                           >
                              <Form onFinish={() => handleSubmit(property._id)} className='m-3'>
                                 <h3>Job Description and Skills</h3><hr />
                                 <div className="d-flex flex-column mt-0">
                                    <h5>Descrption:</h5><p>{property.jobDescription}</p><br />
                                    <h5>Skills:</h5><p>{property.skills}</p><br />
                                 </div>
                                 <hr style={{ height: 3, background: 'black' }} />
                                 <h3>Enter Your Details for the Application</h3><hr />
                                 <h5>Personal Details:</h5>
                                 <Row gutter={20}>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Full Name" required>
                                          <Input name='name' value={details.name} onChange={handleChange} placeholder='Enter name' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Phone" required>
                                          <Input name='phone' value={details.phone} onChange={handleChange} type='number' placeholder='Your phone' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Email" required>
                                          <Input name='email' value={details.email} onChange={handleChange} type='email' placeholder='Your email' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Address" required>
                                          <Input name='address' value={details.address} onChange={handleChange} type='text' placeholder='Your address' />
                                       </Form.Item>
                                    </Col>
                                 </Row>
                                 <h5>Highest Educational Details:</h5>
                                 <Row gutter={20}>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="University Name" required>
                                          <Input name='universityName' value={details.universityName} onChange={handleChange} type='text' placeholder='Your university name' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Highest Degree" required>
                                          <Input name='degree' value={details.degree} onChange={handleChange} type='text' placeholder='Your highest degree' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Experience" required>
                                          <Input name='experience' value={details.experience} onChange={handleChange} type='number' placeholder='Your experience' />
                                       </Form.Item>
                                    </Col>
                                 </Row>
                                 <h5>Resume(only in Pdf Format):</h5>
                                 <Row gutter={20}>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Resume" required>
                                          <Input name='resume' accept="application/pdf" onChange={handleDocumentChange} type='file' />
                                       </Form.Item>
                                    </Col>
                                    <br />
                                    <Form.Item>
                                       <Button type='submit' variant='outline-warning'>
                                          Submit
                                       </Button>
                                    </Form.Item>
                                 </Row>
                              </Form>
                           </Modal> */